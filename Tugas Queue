class Queue {
    constructor() {
      this.items = [];
    }
  
     enqueue(element) {
      this.items.push(element);
    }
  
    dequeue() {
      if (this.isEmpty()) {
        return "Queue is empty";
      }
      return this.items.shift();
    }
  
    front() {
      if (this.isEmpty()) {
        return "Queue is empty";
      }
      return this.items[0];
    }
  
    isEmpty() {
      return this.items.length === 0;
    }
  
    size() {
      return this.items.length;
    }
  
    print() {
      console.log(this.items.toString());
    }
  }
  
  const queue = new Queue();
  
  queue.enqueue(10);
  queue.enqueue(20);
  queue.enqueue(30);
  
  console.log("Front element:", queue.front());
  queue.print();
  
  console.log("Dequeued element:", queue.dequeue());
  console.log("Queue after dequeue:");
  queue.print();
  
  console.log("Is queue empty?", queue.isEmpty());
  console.log("Queue size:", queue.size());
  
